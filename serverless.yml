service: backupsystem-sqs-sns-s3-dynamodb-aws

frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: us-east-1
  memorySize: 512
  timeout: 10
  environment: ${file(./serverless_ssm.yml)}
  apiGateway:
    apiKeys:
      - name: xApiKey
        value: ${file(./serverless_ssm.yml):X_API_KEY}
  logs:
    # Enable REST API logs
    restApi:
      accessLogging: true
      format: "requestId: $context.requestId"
      executionLogging: true
      level: INFO
      fullExecutionData: true
      role: arn:aws:iam::xxxx:role
      roleManagedExternally: false

plugins:
  - serverless-esbuild
  - serverless-offline-ssm
  - serverless-s3-local
  - serverless-dynamodb-local
  - serverless-offline

functions:
  insertRecords:
    handler: src/functions/mining-plants/crudRecords.insert
    description: function in charge of inserting records into dynamodb
    events:
      - http:
          path: /${file(./serverless_ssm.yml):API_VERSION}/${file(./serverless_ssm.yml):API_ENDPOINT_MINING_PLANTS_NAME}/
          method: POST
          private: true

custom:
  dynamodb:
    stages:
      - dev
    start:
      inMemory: true
      migrate: true
      seed: true
  s3:
    host: ${file(./serverless_ssm.yml):S3_HOST}
    directory: ${file(./serverless_ssm.yml):S3_DIRECTORY}
  serverless-offline-ssm:
    stages:
      - dev
    ssm: ${file(./serverless_ssm.yml)}
  serverless-offline:
    httpPort: 4000
    lambdaPort: 4002    
   
resources:
  - ${file(src/resources/api-gateway.yml)}
  - ${file(src/resources/dynamodb-mining-plants-table.yml)}
  - ${file(src/resources/bucket-s3.yml)}   